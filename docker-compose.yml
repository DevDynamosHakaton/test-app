version: '3.8'

volumes:
  postgres-data:
    driver: local

networks:
  backend:
    driver: bridge

services:
  postgres:
    image: postgres:15.4
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: help-platform
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      start_period: 5s
      interval: 1s
      timeout: 5s
      retries: 99
    networks:
      - backend

  backend:
    image: help-platform-backend:latest
    container_name: help-platform-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: help-platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
    healthcheck:
      test: curl --fail http://localhost:8080/actuator/health || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      - postgres
    networks:
      - backend

  frontend:
    image: help-platform-frontend:latest
    container_name: help-platform-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - backend
